item
dbl
numeric(tests$estimate[[1]])
as.numeric(tests$estimate[[1]])
select(tests, c('conf.int', 'estimate')) %>% mutate(mean_diff=as.numeric(estimate))
tests %>% mutate(x=conf.int[1])
tests %>% mutate(x=as.numeric(conf.int))
tests %>% mutate(x=as.numeric(conf.int[1]))
tests %>% mutate(x=as.numeric(conf.int[[,]]))
tests %>% mutate(x=as.numeric(conf.int[[]]))
tests %>% mutate(x=as.numeric(conf.int[[:]]))
conf.int[[1]]
tests$conf.int[[1]]
tests$conf.int[[1:7]]
tests$conf.int[1]
tests$conf.int[2]
tests$conf.int[1,]
tests$conf.int[,1]
unlist(tests)
tests <- vector('list', n_forms)
for (i in 1:n_forms) {
S_not <- filter(tbl, (Experiment==i & Entailment=="Not Entailment"))$Surprisal
S_ent <- filter(tbl, (Experiment==i & Entailment=="Entailment"))$Surprisal
test <- t.test(S_not, S_ent, paired=T, alternative="greater")
tests[[i]] <- test
}
tests
unlist(tests)
x <- tbl_df(matrix(unlist(l), nrow=n_forms, byrow=T),stringsAsFactors=FALSE)
x <- tbl_df(matrix(unlist(l), nrow=n_forms, byrow=T))
x <- tbl_df(matrix(unlist(tests), nrow=n_forms, byrow=T))
tests <- vector('list', n_forms)
for (i in 1:n_forms) {
S_not <- filter(tbl, (Experiment==i & Entailment=="Not Entailment"))$Surprisal
S_ent <- filter(tbl, (Experiment==i & Entailment=="Entailment"))$Surprisal
test <- t.test(S_not, S_ent, paired=T, alternative="greater")
tests[[i]] <- test
}
x <- tbl_df(matrix(unlist(tests), nrow=n_forms, byrow=T))
x <- data.frame(matrix(unlist(tests), nrow=n_forms, byrow=T))
x
View(x)
x <- data.frame(matrix(unlist(tests), nrow=n_forms, byrow=T, colnames=c("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name"))
)
x <- data.frame(matrix(unlist(tests), nrow=n_forms, byrow=T, colnames=c("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name")))
?matrix
x <- data.frame(matrix(unlist(tests), nrow=n_forms, byrow=T, dimnames()=c("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name")))
x <- data.frame(matrix(unlist(tests), nrow=n_forms, byrow=T, dimnames=c("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name")))
x <- data.frame(matrix(unlist(tests), nrow=n_forms, byrow=T, dimnames=list("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name")))
?array
tbl_df
?tbl_df
x <- tbl_df(matrix(unlist(tests), nrow=n_forms, byrow=T))
x <- tbl_df(matrix(unlist(tests), nrow=n_forms, byrow=T), names=c("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name"))
m<-matrix(unlist(tests), nrow=n_forms, byrow=T)
colnames(m)<-c("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name")
colnames(m)
colnames(m)<-c("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name", 'a')
colnames(m)
View(m)
unlist(tests)
View(tests)
.07431+1.96*.3242074
.07431-1.96*.3242074
tests[[1]][["statistic"]]
qt(0.229222, 2399)
qnorm(.975)
qt(.975, df=2399)
tests[[1]][["conf.int"]]
tests[[1]][["stderr"]]
tests[[1]][["estimate"]]
0.07431549+c(-1,1)*0.3242074
0.07431549+c(-1,1)*0.3242074*1.96\
0.07431549+c(-1,1)*0.3242074*1.96
i=1
sd(filter(tbl, (Experiment==i & Entailment=="Not Entailment"))$Surprisal-filter(tbl, (Experiment==i & Entailment=="Entailment"))$Surprisal)
sd(filter(tbl, (Experiment==i & Entailment=="Not Entailment"))$Surprisal-filter(tbl, (Experiment==i & Entailment=="Entailment"))$Surprisal) / sqrt(len(filter(tbl, (Experiment==i & Entailment=="Entailment"))))
sd(filter(tbl, (Experiment==i & Entailment=="Not Entailment"))$Surprisal-filter(tbl, (Experiment==i & Entailment=="Entailment"))$Surprisal) / sqrt(length(filter(tbl, (Experiment==i & Entailment=="Entailment"))))
tests <- vector('list', n_forms)
cols <- c("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name")
for (i in 1:n_forms) {
S_not <- filter(tbl, (Experiment==i & Entailment=="Not Entailment"))$Surprisal
S_ent <- filter(tbl, (Experiment==i & Entailment=="Entailment"))$Surprisal
test <- t.test(S_not, S_ent, paired=T, alternative="greater")
tests[[i]] <- test
}
tests
tests <- tbl_df(t(sapply(tests, c))) # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
tests
as.numeric(tests)
tests %>% select('stderr', 'estimate')
as.numeric(tests %>% select('stderr', 'estimate'))
select(tests, c('conf.int', 'estimate')) %>%
transmute(conf.int=as.numeric(conf.int))
select(tests, c('conf.int', 'estimate')) %>%
mutate(a=as.numeric(conf.int))
tests <- tbl_df(t(sapply(tests, c))) # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
tests <- vector('list', n_forms)
cols <- c("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name")
for (i in 1:n_forms) {
S_not <- filter(tbl, (Experiment==i & Entailment=="Not Entailment"))$Surprisal
S_ent <- filter(tbl, (Experiment==i & Entailment=="Entailment"))$Surprisal
test <- t.test(S_not, S_ent, paired=T, alternative="greater")
tests[[i]] <- test
}
tests
tests <- tbl_df(t(sapply(tests, c))) # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(tests, c('conf.int', 'estimate')) %>%
mutate(a=as.numeric(conf.int))
select(tests, c('conf.int', 'estimate'))
select(tests, c('stderr', 'estimate'))
select(tests, c('stderr', 'estimate')) %>%
transmute(stderr=as.numeric(stderr), estimate=as.numeric(estimate))
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(stderr=as.numeric(stderr), estimate=as.numeric(estimate))
tests <- vector('list', n_forms)
cols <- c("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name")
for (i in 1:n_forms) {
S_not <- filter(tbl, (Experiment==i & Entailment=="Not Entailment"))$Surprisal
S_ent <- filter(tbl, (Experiment==i & Entailment=="Entailment"))$Surprisal
test <- t.test(S_not, S_ent, paired=T, alternative="greater")
tests[[i]] <- test
}
tests
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(stderr=as.numeric(stderr), estimate=as.numeric(estimate))
View(estimators)
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'diff_means')) %>%
transmute(stderr=as.numeric(stderr), estimate=as.numeric(estimate))
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'diff_means')) %>%
transmute(stderr=as.numeric(stderr), estimate=as.numeric(estimate))
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(diff_means=as.numeric(estimate), stderr=as.numeric(stderr)) %>%
unite(c(1,2,3,4,5,6,7))
tests <- vector('list', n_forms)
cols <- c("statistic", "parameter", "p.value", "conf.int",  "estimate", "null.value", "stderr", "alternative", "method", "data.name")
for (i in 1:n_forms) {
S_not <- filter(tbl, (Experiment==i & Entailment=="Not Entailment"))$Surprisal
S_ent <- filter(tbl, (Experiment==i & Entailment=="Entailment"))$Surprisal
test <- t.test(S_not, S_ent, paired=T, alternative="greater")
tests[[i]] <- test
}
tests
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(diff_means=as.numeric(estimate), stderr=as.numeric(stderr)) %>%
unite(c(1,2,3,4,5,6,7))
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(diff_means=as.numeric(estimate), stderr=as.numeric(stderr))
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(diff_means=as.numeric(estimate), stderr=as.numeric(stderr)) %>%
bind_cols(c(1,2,3,4,5,6,7))
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(diff_means=as.numeric(estimate), stderr=as.numeric(stderr)) %>%
bind_cols(list(1,2,3,4,5,6,7))
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(diff_means=as.numeric(estimate), stderr=as.numeric(stderr)) %>%
mutate(Experiment=list(1,2,3,4,5,6,7))
estimator
estimators
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(diff_means=as.numeric(estimate), stderr=as.numeric(stderr)) %>%
mutate(Experiment=c(1,2,3,4,5,6,7))
estimtaors
estimators
c("Hello", "there!")
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(diff_means=as.numeric(estimate), stderr=as.numeric(stderr)) %>%
mutate(Experiment=1:n_forms)
estimators
ggplot(tbl, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge")
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge")
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_mean - 1.96 * se), ymax=(diff_mean + 1.96 * se)), color='black', width=.3)
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * se), ymax=(diff_means + 1.96 * se)), color='black', width=.3)
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3)
ggplot(estimators, aes(x=Experiment, y=diff_means)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3)
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3)
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
guides(fill=FALSE) +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3)
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_discrete() +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_discrete(breaks=ii) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
?scale_x_discrete
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_discrete(breaks=waiver()) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_discrete(breaks=1:7) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
str(1:7)
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_discrete(breaks=str(1:7)) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_continuous(breaks=str(1:7)) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
# theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_continuous(breaks=str(1:7)) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_continuous(breaks=1:7) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_discrete(breaks=1:n_forms) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
continuous
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_continuous(breaks=1:n_forms) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_continuous(breaks=1:n_forms) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment") +
ggsave("diff_means_barplot_errors.pdf")
?ggsave
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(diff_means=as.numeric(estimate), stderr=as.numeric(stderr)) %>%
mutate(Experiment=1:n_forms)
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_continuous(breaks=1:n_forms) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment") +
ggsave("diff_means_barplot_errors.pdf", width="7in")
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_continuous(breaks=1:n_forms) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
# Our big ole question: Is there interaction with Entailment?
ggplot(tbl, aes(x=Entailment, y=Surprisal, color=interaction(Entailment, Experiment))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
theme(legend.position="none") +
xlab("Entailment, Contradiction in all Experiments")
ggsave("entailment_all_boxplot_scatter.pdf", width="7in", dpi="retina")
ggsave("entailment_all_boxplot_scatter.pdf", width="7 in", dpi="retina")
ggsave("entailment_all_boxplot_scatter.pdf", width=7, dpi="retina")
# Compare Experiment 2, 3, 6.
tbl %>% subset(Experiment %in% c(2, 3, 6)) %>%
ggplot(aes(x=Entailment, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
theme(legend.position="none") +
xlab("Entailment, Contradiction in Experiments 2, 3, 6")
head(tbl)
# Overall?
ggplot(tbl, aes(x=Crossing, y=Surprisal, fill=Crossing)) +
#geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(notch=T) +
xlab("Crossing, Not Crossing in all Experiments")
# Compare Experiment 2, 3, 6.
tbl %>% subset(Experiment %in% c(2, 3, 6)) %>%
ggplot(aes(x=Entailment, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Entailment, Contradiction in Experiments 2, 3, 6")
for (i in 1:n_forms) {
input <- read.csv(paste(prefix, i, '.tsv', sep=''), sep='\t') %>%
mutate(Experiment=i) %>%
mutate(Entailment=ifelse(Crossing == 'E_nX' | Crossing == 'E_X', "Entailment", "Not Entailment")) %>%
mutate(Crossing=ifelse(Experiment != 3 & (Crossing == 'E_X' | Crossing == 'C_X'), 'Crossing Dependency', 'Not Crossing'))
# Note! Experiment 3 was mistemplated, and in fact is not crossing at all.
if (i == 1) tbl <- tbl_df(input)
else tbl <- bind_rows(tbl, input)
}
# Just a taste...
sample_n(tbl, 10)
seed()
set.seed
ggplot(tbl, aes(x=Entailment, y=Surprisal, color=interaction(Entailment, Experiment))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
theme(legend.position="none") +
xlab("Entailment, Contradiction in all Experiments")
# Compare Experiment 2, 6.
tbl %>% subset(Experiment %in% c(2, 6)) %>%
ggplot(aes(x=Entailment, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Entailment, Contradiction in Experiments 2, 3, 6")
ggplot(tbl, aes(x=Crossing, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T)
ggplot(tbl, aes(x=Entailment, y=Surprisal, color=interaction(Entailment, Experiment))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
theme(legend.position="none") +
xlab("Entailment, Contradiction in all Experiments")
ggplot(tbl, aes(x=Crossing, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Crossing, Not Crossing Implications in all Experiments")
ggsave("crossing_236_boxplot_scatter.pdf", width=8, height=2, dpi="retina")
urprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Crossing, Not Crossing Implications in all Experiments")
ggsave("crossing_all_boxplot_scatter.pdf", width=8, height=2, dpi="retina")
# Compare Experiment 2, 6.
tbl %>% subset(Experiment %in% c(2, 6)) %>%
ggplot(aes(x=Entailment, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Entailment, Contradiction in Experiments 2, 6")
ggsave("crossing_on_entailment_236_boxplot_scatter.pdf", dpi="retina")
ggplot(tbl, aes(x=Crossing, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Crossing, Not Crossing Implications in all Experiments")
ggsave("crossing_all_boxplot_scatter.pdf", width=8, height=2, dpi="retina")
ggplot(tbl, aes(x=Crossing, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
theme(legend.position="none") +
xlab("Crossing, Not Crossing Implications in all Experiments")
ggsave("crossing_all_boxplot_scatter.pdf", width=8, height=3.5, dpi="retina")
# Compare Experiment 4, 5.
tbl %>% subset(Experiment %in% c(4, 5)) %>%
ggplot(aes(x=Entailment, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Entailment, Contradiction in Experiments 4, 5")
# Overall?
ggplot(tbl, aes(x=Crossing, y=Surprisal, fill=Crossing)) +
#geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(notch=T) +
theme(legend.position="none") +
xlab("Crossing, Not Crossing in all Experiments")
ggplot(tbl, aes(x=Crossing, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
theme(legend.position="none") +
xlab("Crossing, Not Crossing Implications in all Experiments")
ggsave("crossing_all_boxplot_scatter.pdf", width=8, height=3.5, dpi="retina")
# Compare Experiment 2, 6.
tbl %>% subset(Experiment %in% c(2, 6)) %>%
ggplot(aes(x=Entailment, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Entailment, Contradiction in Experiments 2, 6")
ggsave("crossing_on_entailment_26_boxplot_scatter.pdf", dpi="retina")
# Compare Experiment 4, 5.
tbl %>% subset(Experiment %in% c(4, 5)) %>%
ggplot(aes(x=Entailment, y=Surprisal, color=interaction(Crossing))) +
facet_wrap(~ Experiment) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Entailment, Contradiction in Experiments 4, 5")
ggsave("crossing_on_entailment_45_boxplot_scatter.pdf", dpi="retina")
# Overall?
tbl %>% subset(Experiment %in% c(2, 3,4,5,6,7)) %>%
ggplot(aes(x=Crossing, y=Surprisal, fill=Crossing)) +
#geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(notch=T) +
theme(legend.position="none") +
xlab("Crossing, Not Crossing in all Experiments")
# Overall?
tbl %>% subset(Experiment %in% c(2, 4,5,6,7)) %>%
ggplot(aes(x=Crossing, y=Surprisal, fill=Crossing)) +
#geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(notch=T) +
theme(legend.position="none") +
xlab("Crossing, Not Crossing in all Experiments")
# Overall?
tbl %>% subset(Experiment %in% c(2, 1,2,4,5,6,7)) %>%
ggplot(aes(x=Crossing, y=Surprisal, fill=Crossing)) +
#geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(notch=T) +
theme(legend.position="none") +
xlab("Crossing, Not Crossing in all Experiments")
tbl %>% subset(Experiment %in% c(3)) %>%
ggplot(aes(x=Entailment, y=Surprisal, color=interaction(Preposition))) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Prepositions in Experiment 3")
tbl %>% subset(Experiment %in% c(4, 5)) %>%
ggplot(aes(x=Entailment, y=Surprisal, color=interaction(E.D))) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Expletive/Demonstratives in Experiments 4, 6")
ggplot(tbl, aes(x=Entailment, y=Surprisal, color=interaction(Connective))) +
geom_point(alpha = 0.2, position = "jitter") +
geom_boxplot(alpha=0, color='black', notch=T) +
xlab("Connectives in all Experiments")
ggplot(tbl, aes(x=Entailment, y=Surprisal, fill=Entailment)) +
facet_wrap(~ Connective) +
theme(legend.position="none") +
geom_boxplot(notch=T) +
xlab("Entailment, not Entailment for each Connective")
# Each experiment has a tsv output; bind them together into one table
prefix <- 'results_GPT2-'
n_forms <- 7
n_tuples <- 25
for (i in 1:n_forms) {
input <- read.csv(paste(prefix, i, '.tsv', sep=''), sep='\t') %>%
mutate(Experiment=i) %>%
mutate(Entailment=ifelse(Crossing == 'E_nX' | Crossing == 'E_X', "Entailment", "Not Entailment")) %>%
mutate(Crossing=ifelse(Experiment != 3 & (Crossing == 'E_X' | Crossing == 'C_X'), 'Crossing Dependency', 'Not Crossing'))
# Note! Experiment 3 was mistemplated, and in fact is not crossing at all.
if (i == 1) tbl <- tbl_df(input)
else tbl <- bind_rows(tbl, input)
}
# Just a taste...
sample_n(tbl, 10)
tests <- vector('list', n_forms)
for (i in 1:n_forms) {
S_not <- filter(tbl, (Experiment==i & Entailment=="Not Entailment"))$Surprisal
S_ent <- filter(tbl, (Experiment==i & Entailment=="Entailment"))$Surprisal
test <- t.test(S_not, S_ent, paired=T, alternative="greater")
tests[[i]] <- test
}
tests
* Exp1: Nope
estimators <- tbl_df(t(sapply(tests, c))) %>% # https://stackoverflow.com/questions/4227223/convert-a-list-to-a-data-frame
select(c('stderr', 'estimate')) %>%
transmute(diff_means=as.numeric(estimate), stderr=as.numeric(stderr)) %>%
mutate(Experiment=1:n_forms)
ggplot(estimators, aes(x=Experiment, y=diff_means, fill=Experiment)) +
geom_bar(stat="identity", position="dodge") +
theme(legend.position="none") +
geom_errorbar(aes(ymin=(diff_means - 1.96 * stderr), ymax=(diff_means + 1.96 * stderr)), color='black', width=.3) +
scale_x_continuous(breaks=1:n_forms) +
xlab("Difference in Means, Contradiction-Entailment, per-Experiment")
